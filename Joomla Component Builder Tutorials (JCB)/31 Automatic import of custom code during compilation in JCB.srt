1
00:00:00,256 --> 00:00:04,352
Hi welcome to component Builder

2
00:00:04,864 --> 00:00:06,656
We've just added a very

3
00:00:06,912 --> 00:00:09,216
Smart new feature

4
00:00:09,728 --> 00:00:11,008
To component Builder

5
00:00:12,032 --> 00:00:12,800
That's

6
00:00:13,056 --> 00:00:14,080
Is called

7
00:00:14,336 --> 00:00:15,360
Custom code

8
00:00:16,896 --> 00:00:18,944
You can find it here next to Dynamic get

9
00:00:19,456 --> 00:00:20,992
It's basically where it's stored

10
00:00:22,016 --> 00:00:24,064
You'd hardly never need to go in here

11
00:00:24,576 --> 00:00:29,952
Unless you wanna look at what is already been stored and make changes to that in the UI

12
00:00:30,464 --> 00:00:35,072
Most of the time you will be doing the changes in your editor

13
00:00:35,584 --> 00:00:37,376
So your editor will be

14
00:00:37,888 --> 00:00:39,168
Basically where you will work

15
00:00:39,680 --> 00:00:41,984
So what is the purpose of this new feature

16
00:00:42,240 --> 00:00:44,032
The feature is really there

17
00:00:44,544 --> 00:00:48,640
For those who are used to actually coding in another editor

18
00:00:49,664 --> 00:00:55,040
So what we can then say is let's say they create a component in component Builder

19
00:00:56,064 --> 00:00:57,856
Then once they've created it

20
00:00:58,112 --> 00:01:01,184
They basically do it compile

21
00:01:01,440 --> 00:01:04,256
and install it onto the same website

22
00:01:04,512 --> 00:01:05,792
As component Builder

23
00:01:06,304 --> 00:01:07,584
To test it

24
00:01:08,096 --> 00:01:12,960
And then during testing they are adding code into that

25
00:01:13,472 --> 00:01:15,264
Compiled version

26
00:01:15,520 --> 00:01:18,336
That are installed onto this website right

27
00:01:18,592 --> 00:01:22,176
Well the new feature could then

28
00:01:22,432 --> 00:01:26,272
On compilation extract that custom code

29
00:01:26,528 --> 00:01:29,344
Store it in this custom code area

30
00:01:29,600 --> 00:01:33,440
And add it back into the component on the fly

31
00:01:34,208 --> 00:01:34,720
So

32
00:01:34,976 --> 00:01:37,280
I'm sure that is quite exciting

33
00:01:37,536 --> 00:01:43,680
Anyway let me do some demonstration give you some of the rules guidelines since there are some

34
00:01:43,936 --> 00:01:44,960
Limitations

35
00:01:45,216 --> 00:01:50,080
And then obviously this is still in beta there's quite a few things still to do

36
00:01:50,336 --> 00:01:54,944
But I would like to get it out there have you guys tested and get some feedback

37
00:01:57,760 --> 00:02:01,600
Ok I'm gonna compile the demo component

38
00:02:01,856 --> 00:02:05,440
Since most of you might already have this component installed

39
00:02:05,696 --> 00:02:11,072
And you can then use this is so the test area so we will compile a demo component

40
00:02:14,400 --> 00:02:18,240
Ok then I'm gonna install it on to this current site

41
00:02:21,824 --> 00:02:22,592
Great

42
00:02:22,848 --> 00:02:23,616
Now

43
00:02:23,872 --> 00:02:26,176
I'm gonna go and give you

44
00:02:26,432 --> 00:02:28,736
An explanation of how to add

45
00:02:28,992 --> 00:02:31,552
Custom scripting to that component

46
00:02:32,320 --> 00:02:33,600
By going to an editor

47
00:02:36,160 --> 00:02:40,512
Ok so here in the editor you can see this is the root directory

48
00:02:40,768 --> 00:02:42,048
Of the website

49
00:02:42,560 --> 00:02:47,936
I'm gonna do something on the back end of the components I'll open administrator components

50
00:02:48,192 --> 00:02:49,984
And then there is the demo component

51
00:02:50,496 --> 00:02:53,056
And let's just go to it's main page

52
00:02:53,568 --> 00:02:56,128
Ok so its main index page

53
00:02:56,896 --> 00:03:00,992
And then let's see I'm gonna add some custom scripting here

54
00:03:01,248 --> 00:03:03,040
Just for the demonstration

55
00:03:04,064 --> 00:03:08,160
Now the way to add custom scripting there are some conventions and some

56
00:03:08,416 --> 00:03:09,952
Sort of regulations

57
00:03:10,976 --> 00:03:13,536
Let me first show you the conventions

58
00:03:14,816 --> 00:03:20,704
To insert custom scripting you will use a tag like so

59
00:03:20,960 --> 00:03:22,752
So obviously

60
00:03:25,824 --> 00:03:31,968
You will use asterisks instead of The X s that are in the code so the code has the X s in it but the actual

61
00:03:32,224 --> 00:03:33,504
They would be with the Asterix

62
00:03:34,016 --> 00:03:40,160
So that will be to insert new code you use that that place holder and the beginning of the

63
00:03:40,416 --> 00:03:42,720
Area then after a new line

64
00:03:42,976 --> 00:03:49,120
You will insert your code and then at the end of the code you will insert this one to close the code

65
00:03:50,144 --> 00:03:50,912
Ok

66
00:03:51,168 --> 00:03:53,472
Then there are obviously two ways

67
00:03:53,728 --> 00:03:58,336
Of adding code, one is to insert code and one is to replace existing code

68
00:03:58,848 --> 00:04:04,224
So inserting code would simply at the same line insert that code into the existing code

69
00:04:04,736 --> 00:04:10,624
Where is replacing code will literally remove the old code and add the new code in its place

70
00:04:10,880 --> 00:04:13,184
So these are the two conventions

71
00:04:13,440 --> 00:04:16,768
Once component builder adds the code back

72
00:04:17,024 --> 00:04:19,327
The tag will change inserted

73
00:04:19,583 --> 00:04:22,143
Insert will change to inserted

74
00:04:22,399 --> 00:04:28,543
And will have this new number at the end this number is actually referencing the ID of the

75
00:04:28,799 --> 00:04:29,823
Code in the system

76
00:04:30,079 --> 00:04:35,199
Now don't ever change this number or component Builder with think that it doesn't have one

77
00:04:35,455 --> 00:04:36,991
And it needs to be created

78
00:04:37,247 --> 00:04:41,087
So it will be an error it won't work so don't take this

79
00:04:41,343 --> 00:04:42,111
Number out

80
00:04:42,367 --> 00:04:43,135
Then

81
00:04:43,903 --> 00:04:45,439
It will add this at the end

82
00:04:45,695 --> 00:04:50,815
Now on other after compiling it and adding this string in it won't

83
00:04:51,071 --> 00:04:53,887
Compile it again because of these

84
00:04:54,399 --> 00:04:55,935
Opening and closing

85
00:04:56,191 --> 00:04:57,983
Brackets not being there

86
00:04:58,495 --> 00:05:00,543
Greater and

87
00:05:02,079 --> 00:05:03,871
Lesser than signs

88
00:05:04,127 --> 00:05:08,223
They they are the ones that activate it and makes makes it

89
00:05:08,479 --> 00:05:10,783
Basically be parsed again

90
00:05:11,039 --> 00:05:14,623
So when component builder places the code back it looks like this

91
00:05:15,135 --> 00:05:20,511
When you then later come and want to change it again you would add this diamond in there

92
00:05:20,767 --> 00:05:24,607
And it will then update the existing

93
00:05:25,375 --> 00:05:26,655
Code in the database

94
00:05:26,911 --> 00:05:28,703
With the changes that you've made

95
00:05:30,495 --> 00:05:36,639
That's basically it. There are a few limitations you cannot add

96
00:05:36,895 --> 00:05:37,407
Code

97
00:05:37,663 --> 00:05:41,759
Closer to each other than I would say 6 lines

98
00:05:42,015 --> 00:05:43,807
So if there are gonna be code

99
00:05:44,319 --> 00:05:49,695
Close to each other and it ends and starts within the parameter of 6 lines

100
00:05:49,951 --> 00:05:51,999
You end up with a problem

101
00:05:52,511 --> 00:05:57,631
So especially at the end I will demonstrate that somehow in our

102
00:05:57,887 --> 00:06:04,031
Actual doing of of this but the reason is Component Builder doesn't only use the line

103
00:06:04,287 --> 00:06:07,615
In which this is found to remember where to place it

104
00:06:07,871 --> 00:06:14,015
But actually creates a sort of a fingerprint of the code above the insertion and the code

105
00:06:14,271 --> 00:06:16,831
Below this insertion to

106
00:06:17,087 --> 00:06:19,391
Accurately insert it in the future

107
00:06:19,647 --> 00:06:21,951
So that code changes

108
00:06:22,463 --> 00:06:27,327
and then Component Builder will give you a notice and will not insert the code

109
00:06:27,839 --> 00:06:30,911
This is because of the nature of JCB

110
00:06:32,191 --> 00:06:35,007
It actually is constantly improving

111
00:06:35,263 --> 00:06:41,407
it's constantly being improved and that therefore it's code is obviously moving

112
00:06:41,663 --> 00:06:42,431
Around quite a lot

113
00:06:42,687 --> 00:06:43,711
Now

114
00:06:44,735 --> 00:06:47,807
There was no other way for us to try and automate this

115
00:06:48,063 --> 00:06:54,207
Because if we use the line it could possibly cause an accident by overwriting code you

116
00:06:54,463 --> 00:06:55,999
You never intended it to overwrite

117
00:06:56,255 --> 00:07:00,607
So the only way we could solve this was creating what we call a fingerprint

118
00:07:00,863 --> 00:07:07,007
Few lines above the insertion or the replacement and a few lines below there that replacement

119
00:07:07,519 --> 00:07:08,287
Now

120
00:07:08,543 --> 00:07:13,151
I'll demonstrate this in our in our demonstration in a moment

121
00:07:13,407 --> 00:07:14,943
Just a heads up about that

122
00:07:15,455 --> 00:07:17,503
So just quickly a recap

123
00:07:18,015 --> 00:07:20,575
To insert new code you will use this

124
00:07:21,087 --> 00:07:25,439
To replace new code or for the first time you would use that

125
00:07:25,951 --> 00:07:28,767
Obviously at the end of the code you would add these

126
00:07:29,023 --> 00:07:30,559
Corresponding placeholders

127
00:07:31,071 --> 00:07:34,399
I'll put these this little block

128
00:07:34,655 --> 00:07:36,703
Into the comments of this tutorial

129
00:07:36,959 --> 00:07:41,311
So that if any of you need to copy it down you could just copy it from there

130
00:07:43,103 --> 00:07:46,175
Ok and so when Component builder adds it back

131
00:07:46,431 --> 00:07:50,783
It will look like this for the inserted and this for the replaced

132
00:07:51,039 --> 00:07:52,575
and if you then come back

133
00:07:52,831 --> 00:07:56,927
Obviously all you need to do is just add that diamond in there

134
00:07:57,183 --> 00:07:59,743
For it to be updated in the database

135
00:08:00,767 --> 00:08:02,303
So let's see this in action

136
00:08:03,839 --> 00:08:07,935
So here we have that demo components Main

137
00:08:08,447 --> 00:08:09,215
Document

138
00:08:09,983 --> 00:08:11,263
Open

139
00:08:11,519 --> 00:08:14,335
So I'm gonna add some replacement tags here

140
00:08:16,639 --> 00:08:17,663
So there we go

141
00:08:18,431 --> 00:08:24,575
I'm basically not making any changes but I could I could add a few lines here

142
00:08:24,831 --> 00:08:29,439
Maybe another comment hi it worked

143
00:08:30,207 --> 00:08:30,975
And

144
00:08:32,767 --> 00:08:34,303
No space there

145
00:08:34,559 --> 00:08:38,911
Let's do Echo

146
00:08:43,519 --> 00:08:44,799
Hi it

147
00:08:45,055 --> 00:08:46,847
Worked

148
00:08:47,103 --> 00:08:53,247
And that should do it so now this is just gonna replace this area

149
00:08:58,879 --> 00:09:02,207
So let's go to the compiler and compile the component

150
00:09:03,743 --> 00:09:06,047
See what happens

151
00:09:06,303 --> 00:09:10,143
So in the compiler I'm simply gonna compile a component again

152
00:09:14,239 --> 00:09:16,287
Ok it successfully compiled

153
00:09:16,799 --> 00:09:18,591
Now before I install it

154
00:09:19,103 --> 00:09:23,967
I could do a check to see whether it actually did get the code from the component

155
00:09:24,479 --> 00:09:29,599
The way I'll do that is I'm just gonna open custom codes in a new tab

156
00:09:29,855 --> 00:09:35,999
And low and behold there is says component demo and the path in which the change was made

157
00:09:36,255 --> 00:09:39,583
And did it was it was a replacement so we can open that

158
00:09:41,375 --> 00:09:43,679
And there is the code that we want replaced

159
00:09:44,191 --> 00:09:44,703
Right

160
00:09:45,471 --> 00:09:47,007
And there is the hashtag

161
00:09:47,263 --> 00:09:48,287
For the start

162
00:09:48,543 --> 00:09:50,847
The fingerprint and the hashtag for the end

163
00:09:51,359 --> 00:09:57,503
The lines it's in a replacement and everything seems quite great so I will we need to do on this

164
00:09:57,759 --> 00:09:59,807
Area is actually click install

165
00:10:00,319 --> 00:10:02,623
Then that'll be the compiled version 

166
00:10:03,903 --> 00:10:04,927
Now let's go back

167
00:10:05,183 --> 00:10:06,207
To the code

168
00:10:07,231 --> 00:10:08,767
So as you can see

169
00:10:09,279 --> 00:10:15,167
It actually inserted the code in the correct place it moved the other code down enough lines

170
00:10:15,935 --> 00:10:19,263
And it changed it from replace to replaced

171
00:10:19,519 --> 00:10:21,311
And it added the ID

172
00:10:21,823 --> 00:10:22,591
After it

173
00:10:23,359 --> 00:10:29,503
That sort of targets it so I could go and say ok I don't actually want this in here like that

174
00:10:30,271 --> 00:10:31,295
Click save

175
00:10:32,575 --> 00:10:35,391
And then go back to the compiler compile it again

176
00:10:43,839 --> 00:10:44,607
Here we go

177
00:10:45,119 --> 00:10:46,399
Install it again

178
00:10:47,423 --> 00:10:49,727
Go back here refresh this

179
00:10:55,871 --> 00:10:59,967
Oeps it didn't change let me quickly go see why

180
00:11:01,247 --> 00:11:04,063
I forgot to add in the diamond right

181
00:11:04,319 --> 00:11:08,927
You want to change the code you need to ensure that you add this back in

182
00:11:09,183 --> 00:11:11,999
Otherwise it will not even look for it

183
00:11:12,511 --> 00:11:14,303
So we at that back in

184
00:11:14,559 --> 00:11:15,839
Let's try again

185
00:11:18,399 --> 00:11:22,751
Ok now it worked it updated the code in the database

186
00:11:23,007 --> 00:11:24,799
So let's install it

187
00:11:29,919 --> 00:11:31,711
And it updated in the code

188
00:11:32,479 --> 00:11:37,855
So that's how easy it is to replace a certain section now let's look at inserting

189
00:11:38,111 --> 00:11:39,903
Now remember as I said

190
00:11:40,415 --> 00:11:43,999
Don't put code close to each other within at least eight lines

191
00:11:44,511 --> 00:11:48,095
So 1 2 3 4 5 6 7

192
00:11:49,119 --> 00:11:49,631
8

193
00:11:49,887 --> 00:11:56,031
I could actually from this line insert another set of either insert or replace

194
00:11:56,287 --> 00:11:57,567
Another section of code

195
00:11:58,079 --> 00:12:01,151
The reason is because the fingerprint that it creates

196
00:12:01,407 --> 00:12:02,943
Above the insertion

197
00:12:03,199 --> 00:12:05,759
It's sometimes up to 8 lines long

198
00:12:06,527 --> 00:12:07,039
Now

199
00:12:07,295 --> 00:12:10,879
It could happen that it actually uses from there

200
00:12:11,647 --> 00:12:12,671
And that could

201
00:12:12,927 --> 00:12:15,743
Possibly be an error when you make a change here

202
00:12:16,255 --> 00:12:20,607
It will think that this code is also been affected and it won't find it

203
00:12:21,375 --> 00:12:27,519
So that is one of the limitations that these code insertions that you do either by replacing or inserting as

204
00:12:27,775 --> 00:12:33,919
Chunk of text script can only be inserted up to eight lines apart

205
00:12:34,175 --> 00:12:34,687
From each other

206
00:12:35,711 --> 00:12:38,015
So let's do an insertion over here

207
00:13:24,351 --> 00:13:27,167
Ok so we got that inserted there

208
00:13:27,423 --> 00:13:29,215
I did put a comment

209
00:13:34,335 --> 00:13:36,383
And let's save that

210
00:13:37,919 --> 00:13:39,967
And now let's compile

211
00:13:46,879 --> 00:13:50,207
Ok before we install it we can just again go check

212
00:13:50,463 --> 00:13:56,607
Whether everything was done as expected and yes the insertion was grabbed it was

213
00:13:56,863 --> 00:14:01,983
Added to the database and it is there

214
00:14:02,751 --> 00:14:04,031
Ok

215
00:14:04,287 --> 00:14:09,663
It has hash target obviously with insertion we only need where it starts not where it ends

216
00:14:10,431 --> 00:14:11,199
And so

217
00:14:11,455 --> 00:14:12,479
We can close that

218
00:14:14,527 --> 00:14:16,575
Now simply install that component

219
00:14:19,135 --> 00:14:20,927
Let's go look at the code

220
00:14:23,231 --> 00:14:26,047
Ok so this added the replacement

221
00:14:26,559 --> 00:14:27,327
Script

222
00:14:27,583 --> 00:14:29,631
Change it from replace to replaced

223
00:14:30,143 --> 00:14:32,191
It's added the inserted script

224
00:14:32,447 --> 00:14:34,239
From insert to inserted it

225
00:14:34,751 --> 00:14:38,591
Now if you want to make a change to it we're again Just add these diamonds here

226
00:14:39,103 --> 00:14:40,895
Make our change

227
00:14:43,711 --> 00:14:49,855
Save the file of course and then

228
00:14:50,111 --> 00:14:51,391
Then let's compile

229
00:14:58,559 --> 00:15:00,607
Let's check whether the work was updated

230
00:15:01,887 --> 00:15:05,215
Great it's updated the work in the database

231
00:15:05,727 --> 00:15:07,775
So let's install the component

232
00:15:09,311 --> 00:15:11,359
Ok let's go look at the code again

233
00:15:13,407 --> 00:15:15,711
Wonderful it's added it back

234
00:15:15,967 --> 00:15:16,991
All seems well

235
00:15:18,015 --> 00:15:18,527
Now

236
00:15:18,783 --> 00:15:24,927
We are working on another part of this implementation that for if so for some reason this code above it

237
00:15:25,183 --> 00:15:26,463
Changes

238
00:15:27,231 --> 00:15:28,767
It will give you a notice

239
00:15:29,279 --> 00:15:30,559
On compilation

240
00:15:31,071 --> 00:15:35,935
That there is been a change to the fingerprint and it could not find the insertion area

241
00:15:36,959 --> 00:15:39,519
It will still add the code on the line number

242
00:15:40,031 --> 00:15:41,823
But it will be escaped

243
00:15:42,591 --> 00:15:46,687
So that it doesn't change or hurt any of the code that still there

244
00:15:47,455 --> 00:15:49,759
The same goes with replacement code

245
00:15:50,015 --> 00:15:52,063
Since it is replacing code

246
00:15:52,319 --> 00:15:53,855
It is a little bit more tricky

247
00:15:54,111 --> 00:15:58,463
So we'll still add it into the line but we will not remove the old code

248
00:15:59,743 --> 00:16:05,887
Anyway I'm still going to be working a bit on that it needs some fine tuning I would like your feedback if you think

249
00:16:06,143 --> 00:16:08,959
There's a better way I'm always open for ideas

250
00:16:09,215 --> 00:16:10,495
Reality is

251
00:16:11,007 --> 00:16:14,079
We are very happy to announce that component builder can now

252
00:16:14,591 --> 00:16:17,663
Automatically extract custom code from your

253
00:16:17,919 --> 00:16:19,711
Component while

254
00:16:19,967 --> 00:16:20,991
In development

255
00:16:21,247 --> 00:16:25,087
Will add a switch that when your ready to distribute your component

256
00:16:25,343 --> 00:16:29,695
You could simply say you know that it's no longer in production

257
00:16:29,951 --> 00:16:34,303
And then when you compile it will actually not add these placeholders

258
00:16:34,559 --> 00:16:36,095
Anymore

259
00:16:36,863 --> 00:16:38,399
Ok well thanks for watching

260
00:16:39,167 --> 00:16:41,215
Please give me your comments at Github

261
00:16:41,471 --> 00:16:43,263
There is actually an issue open there

262
00:16:43,775 --> 00:16:45,055
Called

263
00:16:46,079 --> 00:16:49,407
Automatic import of custom code during compilation

264
00:16:49,663 --> 00:16:50,943
And

265
00:16:51,967 --> 00:16:53,247
You'll see that

266
00:16:53,503 --> 00:16:59,135
Yeah there's quite a few been said you can simply add your your comments and feedback to this ticket

267
00:16:59,391 --> 00:17:01,951
Or to this issue it's issue 37

268
00:17:02,463 --> 00:17:08,607
Since the tutorial be on YouTube possibly by the time you view it closed but

269
00:17:08,863 --> 00:17:13,727
You're still welcome to go and make any comments on the closed issue if you like

270
00:17:14,239 --> 00:17:16,543
Anyway thanks for watching goodbye

